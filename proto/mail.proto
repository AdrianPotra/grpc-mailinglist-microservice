// we will need to run protoc --go_out=. --go_opt=paths=source_relative \
  //--go-grpc_out=. --go-grpc_opt=paths=source_relative \
  //Proto/mail.proto
syntax = "proto3";
package proto; 

option go_package = "mailinglist/proto"; 

// creating a messsage - same email entry struct as in our db
message EmailEntry {
    int64 id = 1;
    string email = 2;
    int64 confirmed_at = 3; 
    bool opt_out = 4; 
}

// creating a message for each request and each response

message CreateEmailRequest {string email_addr = 1; }
message GetEmailRequest {string email_addr = 1; }
message UpdateEmailRequest {EmailEntry email_entry = 1; }
message DeleteEmailRequest {string email_addr = 1; }
message GetEmailBatchRequest {
   int32 page = 1;
   int32 count = 2;
   }

message EmailResponse {optional EmailEntry email_entry = 1; }
message GetEmailBatchResponse {repeated EmailEntry email_entries =1; } // repeated means it's able to return a slice or array or whatever large data we have

// service definition - used to generate the code required to run the server
service MailingListService {
  rpc CreateEmail(CreateEmailRequest) returns (EmailResponse) {}
  rpc GetEmail(GetEmailRequest) returns (EmailResponse) {}
  rpc UpdateEmail(UpdateEmailRequest) returns (EmailResponse) {}
  rpc DeleteEmail(DeleteEmailRequest) returns (EmailResponse) {}
  rpc GetEmailBatch(GetEmailBatchRequest) returns (GetEmailBatchResponse) {}

}
